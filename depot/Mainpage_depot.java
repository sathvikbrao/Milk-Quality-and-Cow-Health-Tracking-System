package depot;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author PRAJWAL PRABHU
 */
import Report.MainFrame;
import connections.DatabaseConnection;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
//import java.awt.ScrollPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import mainpage1.Mainpage;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;

public class Mainpage_depot extends javax.swing.JFrame {

    /**
     * Creates new form Mainpage_depot
     */
    private DatabaseConnection db;

    public Mainpage_depot() {
        initComponents();
        db = new DatabaseConnection();
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(Color.decode("#FF8B13"));
        dutable.setBackground(Color.decode("#FFEA20"));
        dutable.setSelectionBackground(Color.decode("#F273E6"));
//         ScrollPane jScrollPane1 = null;
//        jScrollPane1.getViewport().setBackground(Color.decode("#8D72E1"));       
        headerRenderer.setPreferredSize(new Dimension(100, 40));
        headerRenderer.setForeground(Color.BLACK);
        headerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        dutable.setRowHeight(30);
        dutable.setDefaultRenderer(Object.class, centerRenderer);
        dutable.getTableHeader().setDefaultRenderer(headerRenderer);
        dutable.getTableHeader().setFont(new Font("Sanserif", Font.BOLD, 18));
        lupdatepanel.setVisible(false); // by default not visible
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        depotpanel = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        javax.swing.JButton jButton1 = new javax.swing.JButton();
        javax.swing.JButton depotulbutton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        tfdpassword = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lupdatepanel = new javax.swing.JPanel();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        tfduold = new javax.swing.JTextField();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        tfdunew = new javax.swing.JTextField();
        javax.swing.JButton depotupdatebutton = new javax.swing.JButton();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        dutable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        depotpanel.setBackground(new java.awt.Color(204, 102, 0));
        depotpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setText("Depot  ID  :");
        depotpanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 120, 40));

        jTextField1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        depotpanel.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 177, 40));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel2.setText("Depot Location :");
        depotpanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, -1, 30));

        jTextField2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        depotpanel.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 177, 40));

        jButton1.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-medical-report-100.png"))); // NOI18N
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        depotpanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 100, 90));

        depotulbutton.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        depotulbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-edit-file-100.png"))); // NOI18N
        depotulbutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        depotulbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depotulbuttonActionPerformed(evt);
            }
        });
        depotpanel.add(depotulbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, 90, 100));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel7.setText("Password  :");
        depotpanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 130, 30));

        tfdpassword.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        depotpanel.add(tfdpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 177, 40));

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel8.setText("Report");
        depotpanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 460, 70, 40));

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel10.setText("Status");
        depotpanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 470, 70, 40));

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel11.setText("Enter Depot Credentials");
        depotpanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, -1));

        jPanel1.add(depotpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 470, 550));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1534, 6, 37, 99));

        lupdatepanel.setBackground(new java.awt.Color(255, 102, 102));
        lupdatepanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lupdatepanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Old Location    :");
        lupdatepanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 170, 33));

        tfduold.setEditable(false);
        tfduold.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lupdatepanel.add(tfduold, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 110, 210, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("New Location  :");
        lupdatepanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, -1));

        tfdunew.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lupdatepanel.add(tfdunew, new org.netbeans.lib.awtextra.AbsoluteConstraints(214, 180, 210, 40));

        depotupdatebutton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        depotupdatebutton.setText("UPDATE");
        depotupdatebutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        depotupdatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depotupdatebuttonActionPerformed(evt);
            }
        });
        lupdatepanel.add(depotupdatebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 140, 40));

        dutable.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        dutable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Depot Id", "Old Location", "New Location"
            }
        ));
        dutable.setFocusable(false);
        dutable.setOpaque(false);
        dutable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(dutable);

        lupdatepanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, 470, 160));

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel12.setText("Update Location");
        lupdatepanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-wide-left-arrow-50.png"))); // NOI18N
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });
        lupdatepanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 80, 70));

        jPanel2.setBackground(new java.awt.Color(102, 255, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 150, 30));

        jLabel15.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel15.setText("Select Date :");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 140, 30));

        jLabel16.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel16.setText("Check Total Quantity of Milk Arrived :");
        jLabel16.setToolTipText("");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 10, -1, -1));

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jTextField3.setToolTipText("Quantity");
        jPanel2.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 110, 150, 30));

        jLabel17.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel17.setText("Quatntiy(Ltrs) :");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 150, 30));

        jButton2.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-ok-button-40.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 30, 30));

        lupdatepanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 490, 160));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        lupdatepanel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 480, 530, 10));

        jPanel1.add(lupdatepanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 80, 530, 690));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/goback.png"))); // NOI18N
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 79));

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 36)); // NOI18N
        jLabel14.setText("Hello Admin !!!");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 30, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/milkdepotbgr1.jpg"))); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1600, 800));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1660, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void depotulbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depotulbuttonActionPerformed
        String depotId = jTextField1.getText();
        String depotLocation = jTextField2.getText();
         String password1 = new String(tfdpassword.getPassword());
        if (jTextField1.getText().isEmpty() || tfdpassword.getPassword().length == 0 || jTextField2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Cannot proceed, please enter all fields.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            // Connect to the database

            try {
                Connection conn = db.getConnection();
                // Check if the entered Depot ID and Location match with the Milk Depot table
                String checkQuery = "SELECT COUNT(*) FROM MilkDepot WHERE Local_Loc = ? and Depot_Id = ? and Password=?";
                PreparedStatement checkPstmt = conn.prepareStatement(checkQuery);
                checkPstmt.setString(1, depotLocation);
                checkPstmt.setString(2, depotId);
                checkPstmt.setString(3, password1);
                ResultSet checkRs = checkPstmt.executeQuery();
                while (checkRs.next()) {
                    int count = checkRs.getInt(1);
                    if (count > 0) {
                        JOptionPane.showMessageDialog(null, "Login successful.");
                        String query = "SELECT DEPOT_ID, OLD_LOCATION, NEW_LOCATION FROM updateloc";
                        PreparedStatement stmt = conn.prepareStatement(query);
                        ResultSet rs = stmt.executeQuery();

                        DefaultTableModel model = (DefaultTableModel) dutable.getModel();
                        while (rs.next()) {
                             depotId = rs.getString("DEPOT_ID");
                            String oldLoc = rs.getString("OLD_LOCATION");
                            String newLoc = rs.getString("NEW_LOCATION");
                            model.addRow(new Object[]{depotId, oldLoc, newLoc});
                        }

                        tfduold.setText(depotLocation);
                        lupdatepanel.setVisible(true);

                    } else {
                        JOptionPane.showMessageDialog(null, "No user found ,Recheck DeptId or Password.!!");
                    }
                }

            } catch (SQLException e) {
                e.printStackTrace();
            }

        }


    }//GEN-LAST:event_depotulbuttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String depotId = jTextField1.getText();
        String depotLocation = jTextField2.getText();
        String password1 = new String(tfdpassword.getPassword());
        if (jTextField1.getText().isEmpty() || tfdpassword.getPassword().length == 0 || jTextField2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Cannot proceed, please enter all fields.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            // Connect to the database

            try {
                Connection conn = db.getConnection();
                // Check if the entered Depot ID and Location match with the Milk Depot table
                String checkQuery = "SELECT COUNT(*) FROM MilkDepot WHERE Local_Loc = ? and Depot_Id = ? and Password=?";
                PreparedStatement checkPstmt = conn.prepareStatement(checkQuery);
                checkPstmt.setString(1, depotLocation);
                checkPstmt.setString(2, depotId);
                checkPstmt.setString(3, password1);
                ResultSet checkRs = checkPstmt.executeQuery();
                while (checkRs.next()) {
                    int count = checkRs.getInt(1);
                    if (count > 0) {
                        JOptionPane.showMessageDialog(null, "Login successful.");
                        MainFrame mainframe = new MainFrame();
                        mainframe.setVisible(true);
                        this.dispose(); // closes the current JFrame  
                        jTextField1.setText("");
                        tfdpassword.setText("");
                        jTextField2.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "No user found OR Incorrect Password .");
                    }
                }

            } catch (SQLException e) {
                e.printStackTrace();
            }

        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void depotupdatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depotupdatebuttonActionPerformed
        String oldLoc = tfduold.getText();
        String newLoc = tfdunew.getText();
        if (tfduold.getText().isEmpty() || tfdunew.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Cannot proceed, please enter all fields.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (oldLoc.equals(newLoc)) {
            JOptionPane.showMessageDialog(null, "Same locations cannot be changed");
        } else {
            try {
                Statement stmt;
                Connection conn = db.getConnection();
                stmt = conn.createStatement();

                //update query to update new location in Milkdepot table
                String updateQuery = "UPDATE Milkdepot SET Local_Loc = ? WHERE Local_Loc = ? AND NOT EXISTS (SELECT 1 FROM MilkDepot WHERE Local_Loc = ?)";
                PreparedStatement pstmt = conn.prepareStatement(updateQuery);
                pstmt.setString(1, tfdunew.getText());
                pstmt.setString(2, tfduold.getText());
                pstmt.setString(3, tfdunew.getText());
                int rows = pstmt.executeUpdate();

                if (rows > 0) {
                    String depot_id = jTextField1.getText();

                    //Insert the old and new location values into the Updateloc table
                    String insertQuery = "INSERT INTO Updateloc (Depot_Id, Old_location, New_location) VALUES (?, ?, ?)";
                    PreparedStatement pstmt2 = conn.prepareStatement(insertQuery);
                    pstmt2.setString(1, depot_id);
                    pstmt2.setString(2, tfduold.getText());
                    pstmt2.setString(3, tfdunew.getText());
                    pstmt2.executeUpdate();
                    String selectAllQuery = "SELECT Depot_Id, Old_location, New_location FROM Updateloc";
//        String selectAllQuery = "SELECT Depot_Id, Old_location, New_location FROM Updateloc ORDER BY ID DESC FETCH FIRST 1 ROW ONLY";
                    PreparedStatement pstmt4 = conn.prepareStatement(selectAllQuery);
                    ResultSet rs2 = pstmt4.executeQuery();

                    DefaultTableModel model = (DefaultTableModel) dutable.getModel();
                    while (rs2.next()) {
                        model.addRow(new Object[]{rs2.getString("Depot_Id"), rs2.getString("Old_location"), rs2.getString("New_location")});
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Location already exists");
                }

//        tfduold.setText("");
                tfdunew.setText("");
//         jTextField1.setText("");
//        tfdpassword.setText("");
//        jTextField2.setText("");
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_depotupdatebuttonActionPerformed

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        lupdatepanel.setVisible(false);
        depotpanel.setVisible(true);       // TODO add your handling code here:
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        setVisible(false);
        new Mainpage().setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jDateChooser1.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Enter the date");
        } else {

            try {
                Connection conn = db.getConnection();
                java.util.Date date = jDateChooser1.getDate();
                String depotId = jTextField1.getText();
                String query = "SELECT SUM(Quantity) FROM Userdate WHERE User_Date = ? AND Depot_Id = ?";
                PreparedStatement stmt = conn.prepareStatement(query);

                SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");

                String dateString = dateFormat.format(date);
                stmt.setString(1, dateString);

                stmt.setString(2, depotId);
                ResultSet rs = stmt.executeQuery();
                int quantitySum = 0;
                if (rs.next()) {
                    quantitySum = rs.getInt(1);
                }
                jTextField3.setText(Integer.toString(quantitySum));
                rs.close();
                stmt.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
    }//GEN-LAST:event_jButton2ActionPerformed
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainpage_depot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainpage_depot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainpage_depot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainpage_depot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mainpage_depot().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel depotpanel;
    private javax.swing.JTable dutable;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JPanel lupdatepanel;
    private javax.swing.JPasswordField tfdpassword;
    private javax.swing.JTextField tfdunew;
    private javax.swing.JTextField tfduold;
    // End of variables declaration//GEN-END:variables
}
